getgenv().LuckyHub = {
	ESP = { -- // ESP Settings ( May Cause FPS Drops )
        ['Enabled'] = true, -- // Enables ESP
        ['UseKeybind'] = true, -- // Use ESP Keybind
        ['HoldMode'] = false, -- // Must Hold Keybind Down
        ['Keybind'] = "H", -- // ESP Keybind ( Must Have UseKeybind On )
        ['TeamCheck'] = false, -- // ESP Team Check ( Dont Use On Dahood Games )
		['TeamColors'] = false, -- // ESP Team Colors ( Changes Colors Based On Team )
		['LocalPlayer'] = false, -- // Makes ESP Visible On Local Player ( You )
		['VisibleOnly'] = true, -- // ESP Only Works On Visible Players
		['RainbowMode'] = false, -- // Makes Main ESP Features Color A Rainbow
        ['Box'] = {['Enabled'] = true, ['Color'] = Color3.fromRGB(0, 255, 0), ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0), ['Filled'] = true, ['FilledColor'] = Color3.fromRGB(0, 255, 0), ['FillTransparency'] = 0.15}, -- // Box Settings
        ['HealthBar'] = {['Enabled'] = true, ['HealthText'] = true, ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0),  ['Font'] = "UI", ['Size'] = 13}, -- // Health Bar Settings
        ['ArmorText'] = {['Enabled'] = false, ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0),  ['Font'] = "UI", ['Size'] = 13}, -- // Armor Bar Settings
        ['Names'] = {['Enabled'] = true, ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0),  ['Color'] = Color3.fromRGB(255, 255, 255), ['Font'] = "UI", ['Size'] = 13, ['UseDisplayNames'] = true}, -- // Names Settings
        ['Distance'] = {['Enabled'] = true, ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0),  ['Color'] = Color3.fromRGB(255, 255, 255), ['Font'] = "UI", ['Size'] = 13, ['Method'] = "Studs", ['Shortened'] = true}, -- // Distance Settings // "Studs", "Meters", "Yards", "Inches", "Miles"
        ['Tools'] = {['Enabled'] = true, ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0),  ['Color'] = Color3.fromRGB(255, 255, 255), ['Font'] = "UI", ['Size'] = 13, ['Method'] = "None"}, -- // Tools Settings // "None" If Player Has No Tool Makes Text None // "Visible" If Player Has No Tool Makes Text Not Visible
        ['Tracers'] = {['Enabled'] = true, ['Color'] = Color3.fromRGB(0, 255, 0), ['Outline'] = false, ['OutlineColor'] = Color3.fromRGB(0, 0, 0), ['Thickness'] = 0.6, ['UnlockTracers'] = false}, -- // Tracers Settings
        ['Skeletons'] = {['Enabled'] = true, ['Color'] = Color3.fromRGB(0, 255, 0), ['AddHeadDot'] = false, ['Size'] = 5, ['NumSides'] = 14}, -- // Skeleton Settings
        ['Highlight'] = {['Enabled'] = false, ['OutlineColor'] = Color3.fromRGB(0, 255, 0), ['OutlineTransparency'] = 0.10, ['FillColor'] = Color3.fromRGB(255, 255, 255), ['FillTransparency'] = 1, ['HealthColor'] = false}, -- // Highlight Settings
        ['Flags'] = {['Enabled'] = true, ['Target'] = true, ['Moving'] = true, ['Dead'] = true, ['Standing'] = true, ['DesyncColor'] = Color3.fromRGB(255, 255, 255), ['MovingColor'] = Color3.fromRGB(255, 255, 255), ['DeadColor'] = Color3.fromRGB(255, 255, 255), ['StandingColor'] = Color3.fromRGB(255, 255, 255), ['Outline'] = true, ['OutlineColor'] = Color3.fromRGB(0, 0, 0), ['Font'] = "UI", ['Size'] = 13}, -- // Flags Settings
        ['MaxDistance'] = {['Enabled'] = true, ['Distance'] = 250, ['FadeOut'] = true}, -- // How Far The ESP Works
        ['TargetColor'] = {['Enabled'] = true, ['Color'] = Color3.fromRGB(255, 0, 0), ['Method'] = "Aim Assist"}, -- // Target Settings // Targets ESP Colors Change // "Silent Aim" Changes ESP Colors For Silent Aim Target // "Aim Assist" Changes ESP Colors For Aim Assist Target
        ['FriendColor'] = {['Enabled'] = true, ['Color'] = Color3.fromRGB(0, 255, 0)}, -- // Target Settings // Friends ESP Colors Change // Target Bypass // Doesnt Use Max Distance For Target
	},
}

local Players, Client, Mouse, RS, Camera =
game:GetService("Players"),
game:GetService("Players").LocalPlayer,
game:GetService("Players").LocalPlayer:GetMouse(),
game:GetService("RunService"),
game:GetService("Workspace").CurrentCamera
local Balls = game:GetService("Workspace").Balls

function FindBall()
    local RealBall

    for i, v in pairs(Balls:GetChildren()) do
        if v:GetAttribute("realBall") == true then
            RealBall = v
        end
    end
    return RealBall
end

local Config = {
    Box                       = getgenv().LuckyHub.ESP.Box.Enabled,
    BoxOutline                = getgenv().LuckyHub.ESP.Box.Outline,
    BoxColor                  = getgenv().LuckyHub.ESP.Box.Color,
    BoxOutlineColor           = getgenv().LuckyHub.ESP.Box.OutlineColor,
    BoxFilled                 = getgenv().LuckyHub.ESP.Box.Filled,
    BoxFilledColor            = getgenv().LuckyHub.ESP.Box.FilledColor,
    BoxFilledOpacity          = getgenv().LuckyHub.ESP.Box.FillTransparency,
    HealthBar                 = getgenv().LuckyHub.ESP.HealthBar.Enabled,
    HealthBarText             = getgenv().LuckyHub.ESP.HealthBar.HealthText,
    HealthBarTextOutline      = getgenv().LuckyHub.ESP.HealthBar.Outline,
    HealthBarTextOutlineColor = getgenv().LuckyHub.ESP.HealthBar.OutlineColor,
    HealthBarTextFont         = getgenv().LuckyHub.ESP.HealthBar.Font,
    HealthBarTextSize         = getgenv().LuckyHub.ESP.HealthBar.Size,
    ArmorBarText              = getgenv().LuckyHub.ESP.ArmorText.Enabled,
    ArmorBarTextOutline       = getgenv().LuckyHub.ESP.ArmorText.Outline,
    ArmorBarTextOutlineColor  = getgenv().LuckyHub.ESP.ArmorText.OutlineColor,
    ArmorBarTextFont          = getgenv().LuckyHub.ESP.ArmorText.Font,
    ArmorBarTextSize          = getgenv().LuckyHub.ESP.ArmorText.Size,
    Names                     = getgenv().LuckyHub.ESP.Names.Enabled,
    NamesOutline              = getgenv().LuckyHub.ESP.Names.Outline,
    NamesDistance             = false,
    NamesColor                = getgenv().LuckyHub.ESP.Names.Color,
    NamesOutlineColor         = getgenv().LuckyHub.ESP.Names.OutlineColor,
    NamesFont                 = getgenv().LuckyHub.ESP.Names.Font,
    NamesSize                 = getgenv().LuckyHub.ESP.Names.Size,
    Flags                     = getgenv().LuckyHub.ESP.Flags.Target,
    FlagsOutline              = getgenv().LuckyHub.ESP.Flags.Outline,
    FlagsColor                = getgenv().LuckyHub.ESP.Flags.DesyncColor,
    FlagsOutlineColor         = getgenv().LuckyHub.ESP.Flags.OutlineColor,
    FlagsFont                 = getgenv().LuckyHub.ESP.Flags.Font,
    FlagsSize                 = getgenv().LuckyHub.ESP.Flags.Size,
    Flags2                    = getgenv().LuckyHub.ESP.Flags.Moving,
    FlagsOutline2             = getgenv().LuckyHub.ESP.Flags.Outline,
    FlagsColor2               = getgenv().LuckyHub.ESP.Flags.MovingColor,
    FlagsOutlineColor2        = getgenv().LuckyHub.ESP.Flags.OutlineColor,
    FlagsFont2                = getgenv().LuckyHub.ESP.Flags.Font,
    FlagsSize2                = getgenv().LuckyHub.ESP.Flags.Size,
    Flags4                    = getgenv().LuckyHub.ESP.Flags.Dead,
    FlagsOutline4             = getgenv().LuckyHub.ESP.Flags.Outline,
    FlagsColor4               = getgenv().LuckyHub.ESP.Flags.DeadColor,
    FlagsOutlineColor4        = getgenv().LuckyHub.ESP.Flags.OutlineColor,
    FlagsFont4                = getgenv().LuckyHub.ESP.Flags.Font,
    FlagsSize4                = getgenv().LuckyHub.ESP.Flags.Size,
    Flags5                    = getgenv().LuckyHub.ESP.Flags.Standing,
    FlagsOutline5             = getgenv().LuckyHub.ESP.Flags.Outline,
    FlagsColor5               = getgenv().LuckyHub.ESP.Flags.StandingColor,
    FlagsOutlineColor5        = getgenv().LuckyHub.ESP.Flags.OutlineColor,
    FlagsFont5                = getgenv().LuckyHub.ESP.Flags.Font,
    FlagsSize5                = getgenv().LuckyHub.ESP.Flags.Size,
    Distance                  = getgenv().LuckyHub.ESP.Distance.Enabled,
    DistanceOutline           = getgenv().LuckyHub.ESP.Distance.Outline,
    DistanceColor             = getgenv().LuckyHub.ESP.Distance.Color,
    DistanceOutlineColor      = getgenv().LuckyHub.ESP.Distance.OutlineColor,
    DistanceFont              = getgenv().LuckyHub.ESP.Distance.Font,
    DistanceSize              = getgenv().LuckyHub.ESP.Distance.Size,
    Tools                     = getgenv().LuckyHub.ESP.Tools.Enabled,
    ToolsOutline              = getgenv().LuckyHub.ESP.Tools.Outline,
    ToolsColor                = getgenv().LuckyHub.ESP.Tools.Color,
    ToolsOutlineColor         = getgenv().LuckyHub.ESP.Tools.OutlineColor,
    ToolsFont                 = getgenv().LuckyHub.ESP.Tools.Font,
    ToolsSize                 = getgenv().LuckyHub.ESP.Tools.Size,
    Glow                      = getgenv().LuckyHub.ESP.Highlight.Enabled,
    GlowColor                 = getgenv().LuckyHub.ESP.Highlight.OutlineColor,
    GlowTransparency          = getgenv().LuckyHub.ESP.Highlight.OutlineTransparency,
    GlowColor2                = getgenv().LuckyHub.ESP.Highlight.FillColor,
    GlowTransparency2         = getgenv().LuckyHub.ESP.Highlight.FillTransparency,
    HeadDot                   = getgenv().LuckyHub.ESP.Skeletons.AddHeadDot,
    HeadDotOutline            = false,
    HeadDotColor              = getgenv().LuckyHub.ESP.Skeletons.Color,
    HeadDotOutlineColor       = Color3.new(0,0,0),
    HeadDotRadius             = getgenv().LuckyHub.ESP.Skeletons.Size,
    HeadDotNumSides           = getgenv().LuckyHub.ESP.Skeletons.NumSides,
    HeadDotFilled             = false,
    Tracer                    = getgenv().LuckyHub.ESP.Tracers.Enabled,
    TracerColor               = getgenv().LuckyHub.ESP.Tracers.Color,
    TracerOutline             = getgenv().LuckyHub.ESP.Tracers.Outline,
    TracerOutlineColor        = getgenv().LuckyHub.ESP.Tracers.OutlineColor,
    LookAngle                 = false,
    LookAngleSize             = 10, -- 1-10
    LookAngleColor            = Color3.new(1,1,1),
    Skeleton                  = getgenv().LuckyHub.ESP.Skeletons.Enabled,
    SkeletonColor             = getgenv().LuckyHub.ESP.Skeletons.Color,
    ESPEnabled                = getgenv().LuckyHub.ESP.Enabled,
    TeamCheck                 = getgenv().LuckyHub.ESP.TeamCheck,
    MaxDistance               = 2500,
}

if getgenv().LuckyHub.ESP.Enabled then
    Config.ESPEnabled = true
else
    Config.ESPEnabled = false
end

if getgenv().LuckyHub.ESP.UseKeybind then
	Config.ESPEnabled = false
else
	Config.ESPEnabled = true
end

game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(Key)
if getgenv().LuckyHub.ESP.UseKeybind then
if getgenv().LuckyHub.ESP.Enabled then
if (Key == getgenv().LuckyHub.ESP.Keybind:lower()) then
Config.ESPEnabled = not Config.ESPEnabled
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "LuckyHub",
	Text = "ESP: " .. tostring(Config.ESPEnabled),
	Icon = "rbxassetid://12747441727"
})
end
end
end
end)

game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(Key)
if getgenv().LuckyHub.ESP.UseKeybind then
if getgenv().LuckyHub.ESP.HoldMode then
if (Key == getgenv().LuckyHub.ESP.Keybind:lower()) then
Config.ESPEnabled = false
end
end
end
end)

if getgenv().LuckyHub.ESP.MaxDistance.Enabled then
    Config.MaxDistance = getgenv().LuckyHub.ESP.MaxDistance.Distance
else
    Config.MaxDistance = 2500
end

old = Drawing.new
local drawings = {}
local updaters = {}
Drawing.new = function(...)
  local created = old(...)
  drawings[#drawings + 1] = created
  return created
end

local function DrawLine()
    local l = Drawing.new("Line")
    l.Visible = false
    l.From = Vector2.new(0, 0)
    l.To = Vector2.new(1, 1)
    l.Color = Color3.fromRGB(255, 255, 255)
    l.Thickness = 1
    l.ZIndex = 3
    return l
end

function CreateEsp(Player)
    repeat wait() until Player.Character ~= nil and Player.Character:FindFirstChild("Humanoid") ~= nil
    local BoxOutline,BoxFilled,Box,Name,Flags,FlagsJump,FlagsWalking,FlagsFalling,FlagsStanding,Distance,Tools,Highlight,HealthBarOutline,HealthBar,HealthBarText,ArmorBar,ArmorBarOutline,ArmorBarText,HeadDot,HeadDotOutline,Tracer,TracerOutline,LookAngle = Drawing.new("Square"),Drawing.new("Square"),Drawing.new("Square"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Drawing.new("Text"),Instance.new("Highlight"),Drawing.new("Square"),Drawing.new("Square"),Drawing.new("Text"),Drawing.new("Square"),Drawing.new("Square"),Drawing.new("Text"),Drawing.new("Circle"),Drawing.new("Circle"),Drawing.new("Line"),Drawing.new("Line"),Drawing.new("Line")
    local limbs = {}
    local R15 = (Player.Character.Humanoid.RigType == Enum.HumanoidRigType.R15) and true or false
    if R15 then 
        limbs = {
            -- Spine
            Head_UpperTorso = DrawLine(),
            UpperTorso_LowerTorso = DrawLine(),
            -- Left Arm
            UpperTorso_LeftUpperArm = DrawLine(),
            LeftUpperArm_LeftLowerArm = DrawLine(),
            LeftLowerArm_LeftHand = DrawLine(),
            -- Right Arm
            UpperTorso_RightUpperArm = DrawLine(),
            RightUpperArm_RightLowerArm = DrawLine(),
            RightLowerArm_RightHand = DrawLine(),
            -- Left Leg
            LowerTorso_LeftUpperLeg = DrawLine(),
            LeftUpperLeg_LeftLowerLeg = DrawLine(),
            LeftLowerLeg_LeftFoot = DrawLine(),
            -- Right Leg
            LowerTorso_RightUpperLeg = DrawLine(),
            RightUpperLeg_RightLowerLeg = DrawLine(),
            RightLowerLeg_RightFoot = DrawLine()
        }
    else 
        limbs = {
            Head_Spine = DrawLine(),
            Spine = DrawLine(),
            LeftArm = DrawLine(),
            LeftArm_UpperTorso = DrawLine(),
            RightArm = DrawLine(),
            RightArm_UpperTorso = DrawLine(),
            LeftLeg = DrawLine(),
            LeftLeg_LowerTorso = DrawLine(),
            RightLeg = DrawLine(),
            RightLeg_LowerTorso = DrawLine()
        }
    end
    local function Visibility(state)
        for i, v in pairs(limbs) do
            v.Visible = state
        end
    end
    local function Colorize(color)
        for i, v in pairs(limbs) do
            v.Color = color
        end
    end
    function LocalPlayerCheck()
    if Player == game.Players.LocalPlayer then
    	Box.Color = Color3.fromRGB(255, 0, 255)
    	FlagsStanding.Color = Config.FlagsColor5
    	FlagsFalling.Color = Config.FlagsColor4
    	FlagsWalking.Color = Config.FlagsColor2
    	Flags.Color = Config.FlagsColor
    	BoxFilled.Color = Color3.fromRGB(255, 0, 255)
    	Name.Color = Config.NamesColor
    	Distance.Color = Config.DistanceColor
    	Tools.Color = Config.ToolsColor
    	Highlight.OutlineColor = Color3.fromRGB(255, 0, 255)
    	Highlight.FillTransparency = 1
    	Highlight.FillColor = Color3.fromRGB(255, 0, 255)
    	HeadDot.Color = Color3.fromRGB(255, 0, 255)
    	Tracer.Color = Color3.fromRGB(255, 0, 255)
    	Colorize(Color3.fromRGB(255, 0, 255))
    else
    	Box.Color = Config.BoxColor
    	FlagsStanding.Color = Config.FlagsColor5
    	FlagsFalling.Color = Config.FlagsColor4
    	FlagsWalking.Color = Config.FlagsColor2
    	Flags.Color = Config.FlagsColor
    	BoxFilled.Color = Config.BoxFilledColor
    	Name.Color = Config.NamesColor
    	Distance.Color = Config.DistanceColor
    	Tools.Color = Config.ToolsColor
    	Highlight.OutlineColor = Config.GlowColor
        Highlight.FillTransparency = Config.GlowTransparency2
        Highlight.FillColor = Config.GlowColor2
        HeadDot.Color = Config.HeadDotColor
        Tracer.Color = Config.TracerColor
        Colorize(Config.SkeletonColor)
    end
    end
    function FriendCheck()
    if getgenv().LuckyHub.ESP.FriendColor.Enabled then
    RS.Heartbeat:Connect(function()
    if game.Players.LocalPlayer:IsFriendsWith(Player.UserId) then
    	Box.Color = getgenv().LuckyHub.ESP.FriendColor.Color
    	FlagsStanding.Color = Config.FlagsColor5
    	FlagsFalling.Color = Config.FlagsColor4
    	FlagsWalking.Color = Config.FlagsColor2
    	Flags.Color = Config.FlagsColor
    	BoxFilled.Color = getgenv().LuckyHub.ESP.FriendColor.Color
    	Name.Color = Config.NamesColor
    	Distance.Color = Config.DistanceColor
    	Tools.Color = Config.ToolsColor
    	Highlight.OutlineColor = getgenv().LuckyHub.ESP.FriendColor.Color
    	Highlight.FillTransparency = 1
    	Highlight.FillColor = getgenv().LuckyHub.ESP.FriendColor.Color
    	HeadDot.Color = getgenv().LuckyHub.ESP.FriendColor.Color
    	Tracer.Color = getgenv().LuckyHub.ESP.FriendColor.Color
    	Colorize(getgenv().LuckyHub.ESP.FriendColor.Color)
    else
    	Box.Color = Config.BoxColor
    	FlagsStanding.Color = Config.FlagsColor5
    	FlagsFalling.Color = Config.FlagsColor4
    	FlagsWalking.Color = Config.FlagsColor2
    	Flags.Color = Config.FlagsColor
    	BoxFilled.Color = Config.BoxFilledColor
    	Name.Color = Config.NamesColor
    	Distance.Color = Config.DistanceColor
    	Tools.Color = Config.ToolsColor
    	Highlight.OutlineColor = Config.GlowColor
        Highlight.FillTransparency = Config.GlowTransparency2
        Highlight.FillColor = Config.GlowColor2
        HeadDot.Color = Config.HeadDotColor
        Tracer.Color = Config.TracerColor
        Colorize(Config.SkeletonColor)
    end
    end)
    end
    end
    function TargetCheck()
    RS.Heartbeat:Connect(function()
    if not game.Players.LocalPlayer:IsFriendsWith(Player.UserId) then
    local Ball = FindBall()
    if Ball and Ball:GetAttribute("target") == Player.Name then
    	Box.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	FlagsStanding.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	FlagsFalling.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	FlagsWalking.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Flags.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	BoxFilled.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Name.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Distance.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Tools.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Highlight.OutlineColor = getgenv().LuckyHub.ESP.TargetColor.Color
    	Highlight.FillTransparency = 1
    	Highlight.FillColor = getgenv().LuckyHub.ESP.TargetColor.Color
    	HeadDot.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Tracer.Color = getgenv().LuckyHub.ESP.TargetColor.Color
    	Colorize(getgenv().LuckyHub.ESP.TargetColor.Color)
    else
    	Box.Color = Config.BoxColor
    	FlagsStanding.Color = Config.FlagsColor5
    	FlagsFalling.Color = Config.FlagsColor4
    	FlagsWalking.Color = Config.FlagsColor2
    	Flags.Color = Config.FlagsColor
    	BoxFilled.Color = Config.BoxFilledColor
    	Name.Color = Config.NamesColor
    	Distance.Color = Config.DistanceColor
    	Tools.Color = Config.ToolsColor
    	Highlight.OutlineColor = Config.GlowColor
        Highlight.FillTransparency = Config.GlowTransparency2
        Highlight.FillColor = Config.GlowColor2
        HeadDot.Color = Config.HeadDotColor
        Tracer.Color = Config.TracerColor
        Colorize(Config.SkeletonColor)
    end
    end
    end)
    end
    local Updater = game:GetService("RunService").RenderStepped:Connect(function()
        if Player.Character ~= nil and Player.Character:FindFirstChild("Humanoid") ~= nil and Player.Character:FindFirstChild("HumanoidRootPart") ~= nil and Player.Character.Humanoid.Health > 0 and Player.Character:FindFirstChild("Head") ~= nil then
            local Target2dPosition,IsVisible = workspace.CurrentCamera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)
            local Target2dPositionHead = workspace.CurrentCamera:WorldToViewportPoint(Player.Character.Head.Position)
            local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(workspace.CurrentCamera.FieldOfView * 0.5)) * 2) * 100
            local width, height = math.floor(40 * scale_factor), math.floor(60 * scale_factor)
            local camera = game:GetService("Workspace").CurrentCamera
            if Config.ESPEnabled then
                if Config.Box then
                    Box.Visible = IsVisible
                    Box.Size = Vector2.new(width,height)
                    Box.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2)
                    Box.Thickness = 1
                    Box.ZIndex = 3
                    if Config.BoxOutline then
                        BoxOutline.Visible = IsVisible
                        BoxOutline.Color = Config.BoxOutlineColor
                        BoxOutline.Size = Vector2.new(width,height)
                        BoxOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2)
                        BoxOutline.Thickness = 3
                        BoxOutline.ZIndex = 2
                    else
                        BoxOutline.Visible = false
                    end
                    if Config.BoxFilled then
                        BoxFilled.Visible = IsVisible
                        BoxFilled.Size = Vector2.new(width,height)
                        BoxFilled.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2)
                        BoxFilled.Thickness = 1
                        BoxFilled.Transparency = Config.BoxFilledOpacity
                        BoxFilled.ZIndex = 1
                        BoxFilled.Filled = true
                    else
                        BoxFilled.Visible = false
                    end
                else
                    Box.Visible = false
                    BoxOutline.Visible = false
                    BoxFilled.Visible = false
                end
                if Config.Names then
                    Name.Visible = IsVisible
                    Name.Center = true
                    Name.Outline = Config.NamesOutline
                    Name.OutlineColor = Config.NamesOutlineColor
                    Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -15)
                    Name.ZIndex = 3
                    --Name.Font = Config.NamesFont
                    Name.Size = Config.NamesSize
                    if Config.NamesFont == "UI" then
                        Name.Font = 0
                    elseif Config.NamesFont == "System" then
                        Name.Font = 1
                    elseif Config.NamesFont == "Plex" then
                        Name.Font = 2
                    elseif Config.NamesFont == "Monospace" then
                        Name.Font = 3
                    end
                    if getgenv().LuckyHub.ESP.Names.UseDisplayNames then
                        Name.Text = Player.DisplayName
                    else
                        Name.Text = Player.Name
                    end
                else
                    Name.Visible = false
                end
                if getgenv().LuckyHub.ESP.Flags.Enabled then
                if Config.Flags then
                    Flags.Visible = IsVisible
                    Flags.Center = true
                    Flags.Outline = Config.FlagsOutline
                    Flags.OutlineColor = Config.FlagsOutlineColor
                    Flags.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 26,-2)
                    Flags.ZIndex = 3
                    --Name.Font = Config.NamesFont
                    Flags.Size = Config.NamesSize
                    if Config.NamesFont == "UI" then
                        Flags.Font = 0
                    elseif Config.NamesFont == "System" then
                        Flags.Font = 1
                    elseif Config.NamesFont == "Plex" then
                        Flags.Font = 2
                    elseif Config.NamesFont == "Monospace" then
                        Flags.Font = 3
                    end
                    local function desynccheck()
                    local Ball = FindBall()
                    if Ball and Ball:GetAttribute("target") == Player.Name then
                    	return true
                    else
                    	return false
                    end
                    end
                    if not desynccheck() then
                    	Flags.Visible = false
                    else
                    	Flags.Text = "Targetted"
                    end
                else
                    Flags.Visible = false
                end
           		if Config.Flags2 then
                    FlagsWalking.Visible = IsVisible
                    FlagsWalking.Center = true
                    FlagsWalking.Outline = Config.FlagsOutline
                    FlagsWalking.OutlineColor = Config.FlagsOutlineColor
                    if Flags.Visible == false then
                    	FlagsWalking.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 20,-2)
                    else
                    	FlagsWalking.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 20,10)
                    end
                    FlagsWalking.ZIndex = 3
                    FlagsWalking.Size = Config.NamesSize
                    if Config.NamesFont == "UI" then
                        FlagsWalking.Font = 0
                    elseif Config.NamesFont == "System" then
                        FlagsWalking.Font = 1
                    elseif Config.NamesFont == "Plex" then
                        FlagsWalking.Font = 2
                    elseif Config.NamesFont == "Monospace" then
                        FlagsWalking.Font = 3
                    end
                    local function walkingcheck()
                   	if Player and Player.Character.HumanoidRootPart.Velocity.X > 10 or Player.Character.HumanoidRootPart.Velocity.X < -10 then
                    	return true
                    elseif Player.Character.HumanoidRootPart.Velocity.Z > 10 or Player.Character.HumanoidRootPart.Velocity.Z < -10 then
                    	return true
                    else
                    	return false
                    end
                    end
                    if not walkingcheck() then
                    	FlagsWalking.Visible = false
                    else
                    	FlagsWalking.Text = "Moving"
                    end
                else
                    FlagsWalking.Visible = false
                end
				FlagsJump.Visible = false
                if Config.Flags4 then
                    FlagsFalling.Visible = IsVisible
                    FlagsFalling.Center = true
                    FlagsFalling.Outline = Config.FlagsOutline
                    FlagsFalling.OutlineColor = Config.FlagsOutlineColor
                    if Flags.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,-2)
                    else
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,10)
                    end
                    if FlagsWalking.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,22)
                    else
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,34)
                    end
                    if FlagsJump.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,34)
                    else
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,46)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,-2)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,10)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,22)
                    elseif Flags.Visible == true and FlagsWalking.Visible == false and FlagsJump.Visible == false then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,10)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == true then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,10)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == true then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,22)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == true then
                    	FlagsFalling.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 15.5,34)
                    end
                    FlagsFalling.ZIndex = 3
                    FlagsFalling.Size = Config.NamesSize
                    if Config.NamesFont == "UI" then
                        FlagsFalling.Font = 0
                    elseif Config.NamesFont == "System" then
                        FlagsFalling.Font = 1
                    elseif Config.NamesFont == "Plex" then
                        FlagsFalling.Font = 2
                    elseif Config.NamesFont == "Monospace" then
                        FlagsFalling.Font = 3
                    end
                    local function fallingcheck()
                   	if Player.Character.Humanoid.Health <= 1 then
                    	return true
                    else
                    	return false
                    end
                    end
                    if not fallingcheck() then
                    	FlagsFalling.Visible = false
                    else
                    	FlagsFalling.Text = "Dead"
                    end
                else
                    FlagsFalling.Visible = false
                end
                if Config.Flags5 then
                    FlagsStanding.Visible = IsVisible
                    FlagsStanding.Center = true
                    FlagsStanding.Outline = Config.FlagsOutline
                    FlagsStanding.OutlineColor = Config.FlagsOutlineColor
                    if Flags.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,-2)
                    else
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    end
                    if FlagsWalking.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    else
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,22)
                    end
                    if FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    else
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,22)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,22)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,22)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,22)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,34)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,46)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == true and FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == true and FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,34)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == true and FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 26,46)
                   	end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == true and FlagsFalling.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,34)
                    elseif Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == true and FlagsFalling.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,46)
                    elseif Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == true and FlagsFalling.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,58)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == false and FlagsJump.Visible == false and FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,-2)
                    end
                    if Flags.Visible == true and FlagsWalking.Visible == true and FlagsJump.Visible == false and FlagsFalling.Visible == true then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,34)
                    end
                    if Flags.Visible == false and FlagsWalking.Visible == true and FlagsJump.Visible == false and FlagsFalling.Visible == false then
                    	FlagsStanding.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(width + 25,10)
                    end
                    FlagsStanding.ZIndex = 3
                    FlagsStanding.Size = Config.NamesSize
                    if Config.NamesFont == "UI" then
                        FlagsStanding.Font = 0
                    elseif Config.NamesFont == "System" then
                        FlagsStanding.Font = 1
                    elseif Config.NamesFont == "Plex" then
                        FlagsStanding.Font = 2
                    elseif Config.NamesFont == "Monospace" then
                        FlagsStanding.Font = 3
                    end
                    local function standingcheck()
                   	if Player.Character:WaitForChild("HumanoidRootPart").Velocity.Magnitude >= 1 then
                    	return false
                    else
                    	return true
                    end
                    end
                    if not standingcheck() then
                    	FlagsStanding.Visible = false
                    else
                    	FlagsStanding.Text = "Standing"
                    end
                else
                    FlagsStanding.Visible = false
                end
                end
                if Config.Distance then
                    Distance.Visible = IsVisible
                    Distance.Center = true
                    Distance.Outline = Config.DistanceOutline
                    Distance.OutlineColor = Config.DistanceOutlineColor
                    Distance.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 50,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(0,height + 3)
                    Distance.ZIndex = 3
                    --Name.Font = Config.NamesFont
                    Distance.Size = Config.DistanceSize
                    if Config.DistanceFont == "UI" then
                        Distance.Font = 0
                    elseif Config.DistanceFont == "System" then
                        Distance.Font = 1
                    elseif Config.DistanceFont == "Plex" then
                        Distance.Font = 2
                    elseif Config.DistanceFont == "Monospace" then
                        Distance.Font = 3
                    end
                    if getgenv().LuckyHub.ESP.Distance.Method == "Studs" then
                    	Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude).." studs"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Meters" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 20).." meters"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Yards" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 3.265).." yards"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Inches" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 10).." inches"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Miles" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 18580.6).." miles"
                	end
                	if getgenv().LuckyHub.ESP.Distance.Shortened then
                	if getgenv().LuckyHub.ESP.Distance.Method == "Studs" then
                    	Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude).."st"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Meters" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 20).."m"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Yards" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 3.265).."yds"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Inches" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 10).."in"
                	elseif getgenv().LuckyHub.ESP.Distance.Method == "Miles" then
                		Distance.Text = ""..math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude / 18580.6).."mi"
                	end
                	end
                else
                    Distance.Visible = false
                end
                if Config.Tools then
                    Tools.Visible = IsVisible
                    Tools.Center = true
                    Tools.Outline = Config.ToolsOutline
                    Tools.OutlineColor = Config.ToolsOutlineColor
                    Tools.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 55,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(0,height + 15)
                    Tools.ZIndex = 3
                    --Name.Font = Config.NamesFont
                    Tools.Size = Config.ToolsSize
                    if Config.DistanceFont == "UI" then
                        Tools.Font = 0
                    elseif Config.DistanceFont == "System" then
                        Tools.Font = 1
                    elseif Config.DistanceFont == "Plex" then
                        Tools.Font = 2
                    elseif Config.DistanceFont == "Monospace" then
                        Tools.Font = 3
                    end
                    local Equipped = Player.Character:FindFirstChildOfClass("Tool")
                    if getgenv().LuckyHub.ESP.Tools.Method == "None" then
                    if Equipped then
                    	if Player.Character:FindFirstChildOfClass("Tool").Name == "Combat" or Player.Character:FindFirstChildOfClass("Tool").Name == "Wallet" or Player.Character:FindFirstChildOfClass("Tool").Name == "Cuff" then
                    		Tools.Text = "[" .. Player.Character:FindFirstChildOfClass("Tool").Name .. "]"
                    	else
                    		Tools.Text = Player.Character:FindFirstChildOfClass("Tool").Name
                    	end
                    else
                    	Tools.Text = "[None]"
                    end
                    elseif getgenv().LuckyHub.ESP.Tools.Method == "Visible" then
                    if Equipped then
                    	if Player.Character:FindFirstChildOfClass("Tool").Name == "Combat" or Player.Character:FindFirstChildOfClass("Tool").Name == "Wallet" or Player.Character:FindFirstChildOfClass("Tool").Name == "Cuff" then
                    		Tools.Text = "[" .. Player.Character:FindFirstChildOfClass("Tool").Name .. "]"
                    	else
                    		Tools.Text = Player.Character:FindFirstChildOfClass("Tool").Name
                    	end
                    else
                    	Tools.Visible = false
                    end
                    end
                else
                    Tools.Visible = false
                end
                if Config.Glow then
                    Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    Highlight.OutlineTransparency = Config.GlowTransparency
                    Highlight.Parent = Player.Character
                    Highlight.Adornee = Player.Character
                else
                    Highlight.Parent = game.CoreGui
                end
                if Config.HealthBar then
                    HealthBarOutline.Visible = IsVisible
                    HealthBarOutline.Color = Color3.fromRGB(0,0,0)
                    HealthBarOutline.Thickness = 3
                    HealthBarOutline.Filled = true
                    HealthBarOutline.ZIndex = 2

                    HealthBar.Visible = IsVisible
                    HealthBar.Color = Color3.fromRGB(255,0,0):lerp(Color3.fromRGB(0,255,0), Player.Character:FindFirstChild("Humanoid").Health/Player.Character:FindFirstChild("Humanoid").MaxHealth)
                    HealthBar.Thickness = 1
                    HealthBar.Filled = true
                    HealthBar.ZIndex = 3
                    if Config.HealthBarText then
                        HealthBarText.Visible = IsVisible
                        HealthBarText.Color = Color3.fromRGB(255,0,0):lerp(Color3.fromRGB(0,255,0), Player.Character:FindFirstChild("Humanoid").Health/Player.Character:FindFirstChild("Humanoid").MaxHealth)
                        HealthBarText.Size = Config.HealthBarTextSize
                        HealthBarText.Outline = Config.HealthBarTextOutline
                        HealthBarText.OutlineColor = Config.HealthBarTextOutlineColor
                        HealthBarText.ZIndex = 3
                        --HealthBarText.Font = Config.HealthBarTextFont
                        HealthBarText.Text = math.floor((Player.Character:FindFirstChild("Humanoid").Health/Player.Character:FindFirstChild("Humanoid").MaxHealth)*100)
                        if Config.HealthBarTextFont == "UI" then
                            HealthBarText.Font = 0
                        elseif Config.HealthBarTextFont == "System" then
                            HealthBarText.Font = 1
                        elseif Config.HealthBarTextFont == "Plex" then
                            HealthBarText.Font = 2
                        elseif Config.HealthBarTextFont == "Monospace" then
                            HealthBarText.Font = 3
                        end
                    else
                        HealthBarText.Visible = false
                    end
                    if Config.ArmorBarText then
                        ArmorBarText.Visible = IsVisible
                        ArmorBarText.Color = Color3.fromRGB(52, 149, 235)
                        ArmorBarText.Size = Config.HealthBarTextSize
                        ArmorBarText.Outline = Config.HealthBarTextOutline
                        ArmorBarText.OutlineColor = Config.HealthBarTextOutlineColor
                        ArmorBarText.ZIndex = 3
                        --HealthBarText.Font = Config.HealthBarTextFont
                        ArmorBarText.Text = Player.Character:WaitForChild("BodyEffects")["Armor"].Value
                        if Config.HealthBarTextFont == "UI" then
                            ArmorBarText.Font = 0
                        elseif Config.HealthBarTextFont == "System" then
                            ArmorBarText.Font = 1
                        elseif Config.HealthBarTextFont == "Plex" then
                            ArmorBarText.Font = 2
                        elseif Config.HealthBarTextFont == "Monospace" then
                            ArmorBarText.Font = 3
                        end
                    else
                        ArmorBarText.Visible = false
                    end
                    HealthBarOutline.Size = Vector2.new(3,height + 2)
                    HealthBarOutline.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2,Target2dPosition.Y - Box.Size.Y / 2) + Vector2.new(-4,-1)

                    HealthBar.Size = Vector2.new(1,-(HealthBarOutline.Size.Y - 2) * (Player.Character:FindFirstChild("Humanoid").Health/Player.Character:FindFirstChild("Humanoid").MaxHealth))
                    HealthBar.Position = HealthBarOutline.Position + Vector2.new(1,-1 + HealthBarOutline.Size.Y)
                    if Player.Character.Humanoid.Health <= 99 then
                    	HealthBarText.Position = HealthBarOutline.Position + Vector2.new(-Config.HealthBarTextSize*2-3, 0) + Vector2.new(16.5,-2)
                    else
                    	HealthBarText.Position = HealthBarOutline.Position + Vector2.new(-Config.HealthBarTextSize*2-3, 0) + Vector2.new(10,-2)
                    end
                else
                    HealthBar.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBarText.Visible = false
                    ArmorBarText.Visible = false
                end
                if Config.HeadDot then
                    HeadDot.Visible = IsVisible
                    HeadDot.Radius = Config.HeadDotRadius
                    HeadDot.Position = Vector2.new(Target2dPositionHead.X,Target2dPositionHead.Y)
                    HeadDot.NumSides = Config.HeadDotNumSides
                    HeadDot.Thickness = 1
                    HeadDot.ZIndex = 3
                    if Config.HeadDotOutline then
                        HeadDotOutline.Visible = IsVisible
                        HeadDotOutline.Color = Config.HeadDotOutlineColor
                        HeadDotOutline.Radius = Config.HeadDotRadius
                        HeadDotOutline.Position = Vector2.new(Target2dPositionHead.X,Target2dPositionHead.Y)
                        HeadDotOutline.NumSides = Config.HeadDotNumSides
                        HeadDotOutline.Thickness = 3
                        HeadDotOutline.ZIndex = 2
                    else
                        HeadDotOutline.Visible = false
                    end
                    if Config.HeadDotFilled then
                        HeadDot.Filled = true
                    else
                        HeadDot.Filled = false
                    end
                else
                    HeadDot.Visible = false
                    HeadDotOutline.Visible = false
                end
                if Config.Tracer then
                    Tracer.Visible = IsVisible
                    Tracer.Thickness = getgenv().LuckyHub.ESP.Tracers.Thickness
                    Tracer.ZIndex = 3
                    if getgenv().LuckyHub.ESP.Tracers.UnlockTracers then
                    local m = game:GetService("Players").LocalPlayer:GetMouse()
                    Tracer.From = Vector2.new(m.X, m.Y + 36)
                    TracerOutline.From = Vector2.new(m.X, m.Y + 36)
                    else
                    Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    TracerOutline.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    end
                    Tracer.To = Vector2.new(Target2dPosition.X, Target2dPosition.Y)
                    if Config.TracerOutline then
                        TracerOutline.Visible = IsVisible
                        TracerOutline.Color = Config.TracerOutlineColor
                        TracerOutline.Thickness = 3
                        TracerOutline.ZIndex = 2
                        TracerOutline.To = Vector2.new(Target2dPosition.X, Target2dPosition.Y)
                    else
                        TracerOutline.Visible = false
                    end
                else
                    Tracer.Visible = false
                    TracerOutline.Visible = false
                end
                if Config.LookAngle then
                    local offsetCFrame = CFrame.new(0,0,-Config.LookAngleSize)
                    local playerDirection = Player.Character.Head.CFrame:ToWorldSpace(offsetCFrame)
                    local playerDirectionPos, IsVisible2 = camera:WorldToViewportPoint(Vector3.new(playerDirection.X, playerDirection.Y, playerDirection.Z))
                    LookAngle.Visible = IsVisible2
                    LookAngle.Color = Config.LookAngleColor
                    LookAngle.Thickness = 1
                    LookAngle.ZIndex = 3
                    LookAngle.From = Vector2.new(Target2dPositionHead.X, Target2dPositionHead.Y)
                    LookAngle.To = Vector2.new(playerDirectionPos.X, playerDirectionPos.Y)
                else
                    LookAngle.Visible = false
                end
                
                if Config.Skeleton then
                    Visibility(IsVisible)
                    if R15 then
                        if limbs.Head_UpperTorso.From ~= Vector2.new(Target2dPositionHead.X, Target2dPositionHead.Y) then
                            --Spine
                            local UT = camera:WorldToViewportPoint(Player.Character.UpperTorso.Position)
                            local LT = camera:WorldToViewportPoint(Player.Character.LowerTorso.Position)
                            -- Left Arm
                            local LUA = camera:WorldToViewportPoint(Player.Character.LeftUpperArm.Position)
                            local LLA = camera:WorldToViewportPoint(Player.Character.LeftLowerArm.Position)
                            local LH = camera:WorldToViewportPoint(Player.Character.LeftHand.Position)
                            -- Right Arm
                            local RUA = camera:WorldToViewportPoint(Player.Character.RightUpperArm.Position)
                            local RLA = camera:WorldToViewportPoint(Player.Character.RightLowerArm.Position)
                            local RH = camera:WorldToViewportPoint(Player.Character.RightHand.Position)
                            -- Left leg
                            local LUL = camera:WorldToViewportPoint(Player.Character.LeftUpperLeg.Position)
                            local LLL = camera:WorldToViewportPoint(Player.Character.LeftLowerLeg.Position)
                            local LF = camera:WorldToViewportPoint(Player.Character.LeftFoot.Position)
                            -- Right leg
                            local RUL = camera:WorldToViewportPoint(Player.Character.RightUpperLeg.Position)
                            local RLL = camera:WorldToViewportPoint(Player.Character.RightLowerLeg.Position)
                            local RF = camera:WorldToViewportPoint(Player.Character.RightFoot.Position)

                            --Head
                            limbs.Head_UpperTorso.From = Vector2.new(Target2dPositionHead.X, Target2dPositionHead.Y)
                            limbs.Head_UpperTorso.To = Vector2.new(UT.X, UT.Y)

                            --Spine
                            limbs.UpperTorso_LowerTorso.From = Vector2.new(UT.X, UT.Y)
                            limbs.UpperTorso_LowerTorso.To = Vector2.new(LT.X, LT.Y)

                            -- Left Arm
                            limbs.UpperTorso_LeftUpperArm.From = Vector2.new(UT.X, UT.Y)
                            limbs.UpperTorso_LeftUpperArm.To = Vector2.new(LUA.X, LUA.Y)

                            limbs.LeftUpperArm_LeftLowerArm.From = Vector2.new(LUA.X, LUA.Y)
                            limbs.LeftUpperArm_LeftLowerArm.To = Vector2.new(LLA.X, LLA.Y)

                            limbs.LeftLowerArm_LeftHand.From = Vector2.new(LLA.X, LLA.Y)
                            limbs.LeftLowerArm_LeftHand.To = Vector2.new(LH.X, LH.Y)

                            -- Right Arm
                            limbs.UpperTorso_RightUpperArm.From = Vector2.new(UT.X, UT.Y)
                            limbs.UpperTorso_RightUpperArm.To = Vector2.new(RUA.X, RUA.Y)

                            limbs.RightUpperArm_RightLowerArm.From = Vector2.new(RUA.X, RUA.Y)
                            limbs.RightUpperArm_RightLowerArm.To = Vector2.new(RLA.X, RLA.Y)

                            limbs.RightLowerArm_RightHand.From = Vector2.new(RLA.X, RLA.Y)
                            limbs.RightLowerArm_RightHand.To = Vector2.new(RH.X, RH.Y)

                            -- Left Leg
                            limbs.LowerTorso_LeftUpperLeg.From = Vector2.new(LT.X, LT.Y)
                            limbs.LowerTorso_LeftUpperLeg.To = Vector2.new(LUL.X, LUL.Y)

                            limbs.LeftUpperLeg_LeftLowerLeg.From = Vector2.new(LUL.X, LUL.Y)
                            limbs.LeftUpperLeg_LeftLowerLeg.To = Vector2.new(LLL.X, LLL.Y)

                            limbs.LeftLowerLeg_LeftFoot.From = Vector2.new(LLL.X, LLL.Y)
                            limbs.LeftLowerLeg_LeftFoot.To = Vector2.new(LF.X, LF.Y)

                            -- Right Leg
                            limbs.LowerTorso_RightUpperLeg.From = Vector2.new(LT.X, LT.Y)
                            limbs.LowerTorso_RightUpperLeg.To = Vector2.new(RUL.X, RUL.Y)

                            limbs.RightUpperLeg_RightLowerLeg.From = Vector2.new(RUL.X, RUL.Y)
                            limbs.RightUpperLeg_RightLowerLeg.To = Vector2.new(RLL.X, RLL.Y)

                            limbs.RightLowerLeg_RightFoot.From = Vector2.new(RLL.X, RLL.Y)
                            limbs.RightLowerLeg_RightFoot.To = Vector2.new(RF.X, RF.Y)
                        end
                    else
                        if limbs.Head_Spine.From ~= Vector2.new(Target2dPositionHead.X, Target2dPositionHead.Y) then
                            local T_Height = Player.Character.Torso.Size.Y/2 - 0.2
                            local UT2 = camera:WorldToViewportPoint((Player.Character.Torso.CFrame * CFrame.new(0, T_Height, 0)).p)
                            local LT2 = camera:WorldToViewportPoint((Player.Character.Torso.CFrame * CFrame.new(0, -T_Height, 0)).p)

                            local LA_Height = Player.Character["Left Arm"].Size.Y/2 - 0.2
                            local LUA2 = camera:WorldToViewportPoint((Player.Character["Left Arm"].CFrame * CFrame.new(0, LA_Height, 0)).p)
                            local LLA2 = camera:WorldToViewportPoint((Player.Character["Left Arm"].CFrame * CFrame.new(0, -LA_Height, 0)).p)

                            local RA_Height = Player.Character["Right Arm"].Size.Y/2 - 0.2
                            local RUA2 = camera:WorldToViewportPoint((Player.Character["Right Arm"].CFrame * CFrame.new(0, RA_Height, 0)).p)
                            local RLA2 = camera:WorldToViewportPoint((Player.Character["Right Arm"].CFrame * CFrame.new(0, -RA_Height, 0)).p)

                            local LL_Height = Player.Character["Left Leg"].Size.Y/2 - 0.2
                            local LUL2 = camera:WorldToViewportPoint((Player.Character["Left Leg"].CFrame * CFrame.new(0, LL_Height, 0)).p)
                            local LLL2 = camera:WorldToViewportPoint((Player.Character["Left Leg"].CFrame * CFrame.new(0, -LL_Height, 0)).p)

                            local RL_Height = Player.Character["Right Leg"].Size.Y/2 - 0.2
                            local RUL2 = camera:WorldToViewportPoint((Player.Character["Right Leg"].CFrame * CFrame.new(0, RL_Height, 0)).p)
                            local RLL2 = camera:WorldToViewportPoint((Player.Character["Right Leg"].CFrame * CFrame.new(0, -RL_Height, 0)).p)

                            -- Head
                            limbs.Head_Spine.From = Vector2.new(Target2dPositionHead.X, Target2dPositionHead.Y)
                            limbs.Head_Spine.To = Vector2.new(UT2.X, UT2.Y)

                            --Spine
                            limbs.Spine.From = Vector2.new(UT2.X, UT2.Y)
                            limbs.Spine.To = Vector2.new(LT2.X, LT2.Y)

                            --Left Arm
                            limbs.LeftArm.From = Vector2.new(LUA2.X, LUA2.Y)
                            limbs.LeftArm.To = Vector2.new(LLA2.X, LLA2.Y)

                            limbs.LeftArm_UpperTorso.From = Vector2.new(UT2.X, UT2.Y)
                            limbs.LeftArm_UpperTorso.To = Vector2.new(LUA2.X, LUA2.Y)

                            --Right Arm
                            limbs.RightArm.From = Vector2.new(RUA2.X, RUA2.Y)
                            limbs.RightArm.To = Vector2.new(RLA2.X, RLA2.Y)

                            limbs.RightArm_UpperTorso.From = Vector2.new(UT2.X, UT2.Y)
                            limbs.RightArm_UpperTorso.To = Vector2.new(RUA2.X, RUA2.Y)

                            --Left Leg
                            limbs.LeftLeg.From = Vector2.new(LUL2.X, LUL2.Y)
                            limbs.LeftLeg.To = Vector2.new(LLL2.X, LLL2.Y)

                            limbs.LeftLeg_LowerTorso.From = Vector2.new(LT2.X, LT2.Y)
                            limbs.LeftLeg_LowerTorso.To = Vector2.new(LUL2.X, LUL2.Y)

                            --Right Leg
                            limbs.RightLeg.From = Vector2.new(RUL2.X, RUL2.Y)
                            limbs.RightLeg.To = Vector2.new(RLL2.X, RLL2.Y)

                            limbs.RightLeg_LowerTorso.From = Vector2.new(LT2.X, LT2.Y)
                            limbs.RightLeg_LowerTorso.To = Vector2.new(RUL2.X, RUL2.Y)
                        end
                    end
                else
                    Visibility(false)
                end
                if getgenv().LuckyHub.ESP.RainbowMode then
					Config.BoxColor = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Config.BoxFilledColor = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Config.GlowColor = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Config.GlowColor2 = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Config.TracerColor = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Config.HeadDotColor = Color3.fromHSV( tick() % 5 / 5, 0.55, 1)
					Colorize(Color3.fromHSV( tick() % 5 / 5, 0.55, 1))
				end
				if math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude) >= 165 then
                	Flags.Visible = false
                	FlagsWalking.Visible = false
                	FlagsFalling.Visible = false
                	FlagsStanding.Visible = false
                	FlagsJumpVisible = false
               	end
               	if math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude) >= 225 then
                	HealthBarText.Visible = false
                	ArmorBarText.Visible = false
               	end
                if Config.MaxDistance < math.floor((workspace.CurrentCamera.CFrame.p - Player.Character.HumanoidRootPart.Position).magnitude) then
    				Box.Visible = false
    				Highlight.Parent = game.CoreGui
                    Distance.Visible = false
                    Tools.Visible = false
                    Flags.Visible = false
                    FlagsJump.Visible = false
                    FlagsWalking.Visible = false
                    FlagsFalling.Visible = false
                    FlagsStanding.Visible = false
                    BoxOutline.Visible = false
                    BoxFilled.Visible = false
                    Name.Visible = false
                    HealthBar.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBarText.Visible = false
                    ArmorBar.Visible = false
                    ArmorBarOutline.Visible = false
                    ArmorBarText.Visible = false
                    HeadDot.Visible = false
                    HeadDotOutline.Visible = false
                    Tracer.Visible = false
                    TracerOutline.Visible = false
                    LookAngle.Visible = false
                    Visibility(false)
                end
                if Config.UseTeamColor then
                    Box.Color = Player.TeamColor.Color
                    Tools.Color = Player.TeamColor.Color
                    Highlight.OutlineColor = Player.TeamColor.Color
                    Distance.Color = Player.TeamColor.Color
                    BoxFilled.Color = Player.TeamColor.Color
                    Name.Color = Player.TeamColor.Color
                    HeadDot.Color = Player.TeamColor.Color
                    Tracer.Color = Player.TeamColor.Color
                    LookAngle.Color = Player.TeamColor.Color
                    Colorize(Player.TeamColor.Color)
                end
                if Config.TeamCheck and Player.TeamColor == game:GetService("Players").LocalPlayer.TeamColor then
                    Box.Visible = false
                    Highlight.Parent = game.CoreGui
                    Distance.Visible = false
                    FlagsFalling.Visible = false
                    Tools.Visible = false
                    BoxOutline.Visible = false
                    FlagsStanding.Visible = false
                    BoxFilled.Visible = false
                    Name.Visible = false
                    Flags.Visible = false
                    FlagsJump.Visible = false
                    FlagsWalking.Visible = false
                    HealthBar.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBarText.Visible = false
                    ArmorBar.Visible = false
                    ArmorBarOutline.Visible = false
                    ArmorBarText.Visible = false
                    HeadDot.Visible = false
                    HeadDotOutline.Visible = false
                    Tracer.Visible = false
                    TracerOutline.Visible = false
                    LookAngle.Visible = false
                    Visibility(false)
                end
            else
                Box.Visible = false
                Distance.Visible = false
                Highlight.Parent = game.CoreGui
                FlagsFalling.Visible = false
                Tools.Visible = false
                FlagsStanding.Visible = false
                BoxOutline.Visible = false
                BoxFilled.Visible = false
                Name.Visible = false
                Flags.Visible = false
                FlagsJump.Visible = false
                FlagsWalking.Visible = false
                HealthBar.Visible = false
                HealthBarOutline.Visible = false
                HealthBarText.Visible = false
                ArmorBar.Visible = false
                ArmorBarOutline.Visible = false
                ArmorBarText.Visible = false
                HeadDot.Visible = false
                HeadDotOutline.Visible = false
                Tracer.Visible = false
                TracerOutline.Visible = false
                LookAngle.Visible = false
                Visibility(false)
            end
        else
            Box.Visible = false
            Distance.Visible = false
            Highlight.Parent = game.CoreGui
            FlagsFalling.Visible = false
            Tools.Visible = false
            BoxOutline.Visible = false
            BoxFilled.Visible = false
            Name.Visible = false
            Flags.Visible = false
            FlagsStanding.Visible = false
            FlagsJump.Visible = false
            FlagsWalking.Visible = false
            HealthBar.Visible = false
            HealthBarOutline.Visible = false
            HealthBarText.Visible = false
            ArmorBar.Visible = false
            ArmorBarOutline.Visible = false
            ArmorBarText.Visible = false
            HeadDot.Visible = false
            HeadDotOutline.Visible = false
            Tracer.Visible = false
            TracerOutline.Visible = false
            LookAngle.Visible = false
            Visibility(false)
            if not Player then
                Box:Remove()
                Distance:Remove()
                Highlight:Remove()
                Tools:Remove()
                BoxOutline:Remove()
                BoxFilled:Remove()
                Name:Remove()
                Flags:Remove()
                FlagsJump:Remove()
                FlagsStanding:Remove()
                FlagsWalking:Remove()
                FlagsFalling:Remove()
                HealthBar:Remove()
                HealthBarOutline:Remove()
                HealthBarText:Remove()
                ArmorBar:Remove()
                ArmorBarOutline:Remove()
                ArmorBarText:Remove()
                HeadDot:Remove()
                HeadDotOutline:Remove()
                Tracer:Remove()
                TracerOutline:Remove()
                LookAngle:Remove()
                Updater:Disconnect()
                for i, v in pairs(limbs) do
                    v:Remove()
                end
            end
        end
    end)
    updaters[#updaters + 1] = Updater
end

updaters[#updaters + 1] = updater1

function DestroyEsp()
    for i, v in pairs(drawings) do
        v:Remove()
    end
    for i, v in pairs(updaters) do
        v:Disconnect()
    end
end

if getgenv().LuckyHub.ESP.LocalPlayer then
for _,v in pairs(game:GetService("Players"):GetPlayers()) do
    if v == game:GetService("Players").LocalPlayer then
        CreateEsp(v)
        LocalPlayerCheck()
    end
end

game:GetService("Players").PlayerAdded:Connect(function(v)
    if v == game:GetService("Players").LocalPlayer then
        CreateEsp(v)
        LocalPlayerCheck()
    end
end)
end

for _,v in pairs(game:GetService("Players"):GetPlayers()) do
    if v ~= game:GetService("Players").LocalPlayer then
        CreateEsp(v)
        TargetCheck()
        FriendCheck()
    end
end

game:GetService("Players").PlayerAdded:Connect(function(v)
    if v ~= game:GetService("Players").LocalPlayer then
        CreateEsp(v)
        TargetCheck()
        FriendCheck()
    end
end)
